%section#intro-box.margin-80
  .container
    .row
      .span6
        %ul.breadcrumb
          %li
            %a{:href => root_path} Home
            %span.divider /
          %li
            %a{:href => "/staff/accounts"} My Accounts
            %span.divider /
          %li.active
            = @account.code
            %span.divider /
          %li
            %a{:href => "/staff/accounts/#{params[:id]}/transactions"} Transactions
        %span.arrow.hidden-phone
      .span6.text-right.hidden-phone
        %h3= "#{@account.code} #{@account.name}"
.white
  .container
    .pull-right.hidden-phone
      %br/
      = collection_select("summary", "currency", Currency.all, :code, :name, {:selected => current_user.currency_code})
    %table#records
      %thead
        %tr
          %th.type
            Type
          - @months.each_with_index do |key, index|
            %th.date{class: (if index < 5 then "visible-desktop" elsif index < 10 then "hidden-phone" end)}= key[0]
          %th Current
          %th Budget
          %th.visible-desktop
      %tbody
        -# EXCHANGE RATES
        - unless current_user.currency_code == "NZD"
          %tr.record
            %td{:colspan => @months.length + 4} Exchange Rates
            %tr.record.expandable.closed
              %td= current_user.currency.name
              - @total = 0
              - @currency_summary.each_with_index do |t, index|
                %td{class: (if index < 5 then "visible-desktop" elsif index < 10 then "hidden-phone" end)}= number_with_precision(t[1], :precision => 2, :delimiter => ',')
              %td
              %td=@currency_summary[@day.strftime('%b %y')]
              %td.hidden-phone
            - @random = SecureRandom::uuid
            %tr{:style => 'display:none'}
              %td
              %td{:colspan => 100}
                .bd{:id => @random, :style => 'display:none'}
                  %script{:type => 'text/javascript'}
                    = "insert_graph(\"#{@random}\",#{@months.keys.inspect.html_safe}, #{@data});".html_safe
        -# INCOME
        %tr.record
          %td{:colspan => @months.length + 4} Funds Received
        - @data = []
        - @income.each do |key, value|
          %tr.record.expandable.closed
            %td
              .type= key
            - @total = 0
            - value.each_with_index do |t, index|
              %td{class: (if index < 5 then "visible-desktop" elsif index < 10 then "hidden-phone" end)}= link_to number_with_precision(t[1], :precision => 0, :delimiter => ','), :controller => "accounts", :action => :transactions, :id => params[:id], :type => key, :month => t[0]
              - @total += t[1]
              - @data.push (t[1]).to_i
              - @income_summary[ t[0] ] += t[1]
            %td= number_to_currency @total, :precision => 0
            %td
              - unless @goals[key].nil?
                = number_to_currency @goals[key] * @currency_summary[@day.strftime('%b %y')], :precision => 0
                - @income_goal += @goals[key] * @currency_summary[@day.strftime('%b %y')]
            %td.visible-desktop.details
          - @random = SecureRandom::uuid
          %tr{:style => 'display:none'}
            %td
            %td{:colspan => 100}
              .bd{:id => @random, :style => 'display:none'}
                %script{:type => 'text/javascript'}
                  - if @goals[key].nil?
                    = "insert_graph(\"#{@random}\",#{@months.keys.inspect.html_safe}, #{@data}, \"#{key}\");".html_safe
                  - else
                    = "insert_graph(\"#{@random}\",#{@months.keys.inspect.html_safe}, #{@data}, \"#{key}\", #{@goals[key]});".html_safe
          - @data = []
        -# INCOME SUM
        %tr.sum_totals.record.expandable.closed
          %td
            %span.hidden-phone TOTAL FUNDS
            RECEIVED
          - @total = 0
          - @income_summary.each_with_index do |t,index|
            %td{class: (if index < 5 then "visible-desktop" elsif index < 10 then "hidden-phone" end)}= number_with_precision t[1], :precision => 0, :delimiter => ','
            - @total += t[1]
            - @data.push t[1].to_i
          %td= number_to_currency @total, :precision => 0
          %td= number_to_currency @income_goal, :precision => 0
          %td.visible-desktop.details
        - @random = SecureRandom::uuid
        %tr{:style => 'display:none'}
          %td
          %td{:colspan => 100}
            .bd{:id => @random, :style => 'display:none'}
              %script{:type => 'text/javascript'}
                = "insert_graph(\"#{@random}\",#{@months.keys.inspect.html_safe}, #{@data}, \"TOTAL FUNDS RECEIVED\", #{@income_goal});".html_safe
        -# EXPENSES
        %tr.record
          %td{:colspan => @months.length + 4} Outgoings
        - @data = []
        - @expense.each do |key, value|
          %tr.record.expandable.closed
            %td
              .type= key
            - @total = 0
            - value.each_with_index do |t,index|
              %td{class: (if index < 5 then "visible-desktop" elsif index < 10 then "hidden-phone" end)}= link_to number_with_precision(t[1], :precision => 0, :delimiter => ','), :controller => "accounts", :action => :transactions, :id => params[:id], :type => key, :month => t[0]
              - @total += t[1]
              - @data.push t[1].to_i
              - @expense_summary[ t[0] ] += t[1]
            %td= number_to_currency @total, :precision => 0
            %td
              - unless @goals[key].nil?
                = number_to_currency @goals[key], :precision => 0
                - @expense_goal += @goals[key]
            %td.visible-desktop.details
          - @random = SecureRandom::uuid
          %tr{:style => 'display:none'}
            %td
            %td{:colspan => 100}
              .bd{:id => @random, :style => 'display:none'}
                %script{:type => 'text/javascript'}
                  - if @goals[key].nil?
                    = "insert_graph(\"#{@random}\",#{@months.keys.inspect.html_safe}, #{@data}, \"#{key}\");".html_safe
                  - else
                    = "insert_graph(\"#{@random}\",#{@months.keys.inspect.html_safe}, #{@data}, \"#{key}\", #{@goals[key]});".html_safe
          - @data = []
        -# EXPENSES TOTAL
        %tr.sum_totals.record.expandable.closed
          %td
            %span.hidden-phone TOTAL
            OUTGOINGS
          - @data = []
          - @total = 0
          - @expense_summary.each_with_index do |t,index|
            %td{class: (if index < 5 then "visible-desktop" elsif index < 10 then "hidden-phone" end)}= number_with_precision t[1], :precision => 0, :precision => 0, :delimiter => ','
            - @total += t[1]
            - @data.push t[1].to_i
          %td= number_to_currency @total, :precision => 0
          %td= number_to_currency @expense_goal, :precision => 0
          %td.visible-desktop.details
        - @random = SecureRandom::uuid
        %tr{:style => 'display:none'}
          %td
          %td{:colspan => 100}
            .bd{:id => @random, :style => 'display:none'}
              %script{:type => 'text/javascript'}
                = "insert_graph(\"#{@random}\",#{@months.keys.inspect.html_safe}, #{@data}, \"TOTAL OUTGOINGS\", #{@expense_goal});".html_safe
        -# TOTALS
        %tr.record
          %td{:colspan => @months.length + 4} Summary
        - @balance = [0]
        %tr.record.expandable.closed
          %td Surplus/Deficit
          - @data = []
          - @total = 0
          - @income_summary.each_with_index do |array, index|
            - key = array[0]
            - value = array[1] - @expense_summary[key]
            %td{class: (if index < 5 then "visible-desktop" elsif index < 10 then "hidden-phone" end)}= number_with_precision value, :precision => 0, :delimiter => ','
            - @total += value # + @advance_summary[key] )
            - @balance.push value
            - @data.push value # + @advance_summary[key] ).to_i
          %td
          %td
          %td.visible-desktop.details
        - @random = SecureRandom::uuid
        %tr{:style => 'display:none'}
          %td
          %td{:colspan => 100}
            .bd{:id => @random, :style => 'display:none'}
              %script{:type => 'text/javascript'}
                = "insert_graph(\"#{@random}\",#{@months.keys.inspect.html_safe}, #{@data}, \"Surplus | Deficit\");".html_safe
        -# ADVANCES
        - unless @advance == {}
          %tr.record
            %td{:colspan => @months.length + 4} Advances and Stock
          - @advance.each do |key, value|
            %tr.record.closed
              %td= key
              - @total = 0
              - @stock = 0
              - if key == "Vehicle Advance"
                - @stock += @vehicle_advances
              - elsif key == "Merchandise Inventory"
                - @stock += @stock_advances
              - value.each_with_index do |t,index|
                - if t[1] == 0
                  %td{class: (if index < 5 then "visible-desktop" elsif index < 10 then "hidden-phone" end)}= number_with_precision @stock, :precision => 0, :delimiter => ','
                - else
                  - @stock += t[1].amount * @currency_summary[ t[0] ]
                  - @total += t[1].amount * @currency_summary[ t[0] ]
                  %td{class: (if index < 5 then "visible-desktop" elsif index < 10 then "hidden-phone" end)}= number_with_precision @stock, :precision => 0, :delimiter => ','
                  - if t[1].code == "1225" or t[1].code == "1350" #VEHICLE ADVANCES & STOCK
                    - @advance_summary[ t[0] ] -= t[1].amount * @currency_summary[ t[0] ]
                  - elsif t[1].code == "1220" or t[1].code == "P1210" #ADVANCES
                    -#Do nothing
              %td
                = number_to_currency @total, :precision => 0
                - @advance_final = @total
              %td
              %td.visible-desktop.details
        =# BALANCES
        %tr.sum_totals.record.expandable
          %td Balance
          - @data = []
          - @total = 0
          - sum = 0
          - @advance_summary = @advance_summary.to_a.map{|v| sum += v[1]}
          - sum = 0
          - @balance = @balance.to_a.map{|v| sum += v.to_s.to_d}
          - @balance = @balance.collect { |value| value + ( @account.records.last.balance - sum - @vehicle_advances - @stock_advances) }
          - (1..@months_to_show + 1).each do |count|
            - @data.push @balance[count].to_i
            %td{class: (if count <= 5 then "visible-desktop" elsif count <= 10 then "hidden-phone" end)}= link_to number_with_precision(@balance[count] + @advance_summary[count-1], :precision => 0, :delimiter => ','), :controller => "accounts", :action => :transactions, :id => params[:id], :month => @months.keys[count]
          %td
          %td
          %td.visible-desktop.details
        - @random = SecureRandom::uuid
        %tr
          %td
          %td{:colspan => 100}
            .bd{:id => @random, :style => 'display:block'}
              %script{:type => 'text/javascript'}
                - if @goals["Salary"].nil?
                  = "insert_graph(\"#{@random}\",#{@months.keys.inspect.html_safe}, #{@data},\"Balance\", #{@income_goal});".html_safe
                - else
                  = "insert_graph(\"#{@random}\",#{@months.keys.inspect.html_safe}, #{@data},\"Balance\", #{@income_goal}, #{@goals["Salary"]});".html_safe
