= semantic_form_for [:dmpd, @appointment_set_record], builder: FormtasticBootstrap::FormBuilder do |f|
  - if @appointment_set_record.persisted?
    .row
      .col-md-4
        .form-title Appointment Details
        = f.input :contact, collection: current_user.contacts
        = f.input :date_of_appointment, as: :string, input_html: {:class => 'datepicker', "data-date-format" => "yyyy-mm-dd", placeholder: "yyyy-mm-dd"}
      .col-md-4
        .form-title Giving
        = f.input :gift_date, as: :string, input_html: {:class => 'datepicker', "data-date-format" => "yyyy-mm-dd", placeholder: "yyyy-mm-dd"}
        = f.input :gift_confirmed_date, as: :string, input_html: {:class => 'datepicker', "data-date-format" => "yyyy-mm-dd", placeholder: "yyyy-mm-dd"}
        = f.input :amount
        = f.input :frequency, as: :select, collection: AppointmentSetRecord.pledge_frequencies
      .col-md-4
        .form-title Post Appointment
        = f.input :number_of_contacts_received
        = f.input :asked_for_contacts
        = f.input :thank_you_posted
  - else
    .row.new-appointment
      .col-md-8
        %blockquote Remind yourself that it is not your need that you want to focus on (i.e. the money). Rather it is the Potential Ministry Partner's need. So call them caring about their need. What is their need? It is to serve God in the Great Commission Army. This brings to them two things they need most... Significance and Self-Worth. Also it helps them fulfill the purpose for which God created them.
        = f.input :notes
      .col-md-4
        = f.input :contact, selected: params[:contact_id], label: 'Who', select_html: {class: 'chosen'}, collection: current_user.contacts
        = f.input :date_of_appointment, as: :string, input_html: {:class => 'datepicker', "data-date-format" => "yyyy-mm-dd", placeholder: "yyyy-mm-dd"}, label: 'When'
        = f.input :address, input_html: { class: 'gmaps-address' }, label: 'Where'
        #gmaps-canvas
        - content_for :javascript do
          :javascript
            $(function () {
              setTimeout(function() {
                window.completer = new GmapsCompleter({
                  inputField: '.gmaps-address',
                  debugOn: false
                });
                window.completer.autoCompleteInit({
                  country: "New Zealand"
                });
                completer.update = true;
                completer.geocodeLookup('address', "#{@appointment_set_record.address}", true);
              }, 500);
            });
  = f.actions do
    %a.back{href: dmpd_stats_appointment_set_record_index_path} Cancel
    = f.action :submit, :as => :button, label: "Save", button_html: {:class => "btn btn-primary"}

